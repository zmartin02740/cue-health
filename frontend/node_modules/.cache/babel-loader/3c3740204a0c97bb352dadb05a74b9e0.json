{"ast":null,"code":"var _jsxFileName = \"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/response.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  responses,\n  indexOne\n}) => {\n  _s();\n\n  const [showResponse, setShowResponse] = useState(false);\n  const cardStyle = {\n    marginTop: 10\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: cardStyle,\n    children: [\"Response \", indexOne + 1, \" \", /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setShowResponse(!showResponse),\n      variant: \"light\",\n      children: [\"Show \", showResponse ? 'less' : 'more']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 31\n    }, this), showResponse && /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: responses.map((response, indexTwo) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 31\n            }, this), \" \", response.qOne]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 31\n            }, this), \" \", response.qTwo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Price range:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 31\n            }, this), \" \", response.qThree]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"File uploads:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 31\n            }, this), \" \", response.qFour]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Requested services:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 31\n            }, this), \" \", response.qFive]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, indexTwo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}, \"9cwwFfDuS4Zf1+e6W2A3GdXl+7E=\");","map":{"version":3,"sources":["/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/response.js"],"names":["React","useState","Button","Card","ListGroup","responses","indexOne","showResponse","setShowResponse","cardStyle","marginTop","map","response","indexTwo","qOne","qTwo","qThree","qFour","qFive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,kBAAe,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AAC1C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AAGA,QAAMQ,SAAS,GAAG;AAChBC,IAAAA,SAAS,EAAE;AADK,GAAlB;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAED,SAAb;AAAA,4BACYH,QAAQ,GAAG,CADvB,oBAC0B,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAME,eAAe,CAAC,CAACD,YAAF,CAAtC;AAAuD,MAAA,OAAO,EAAC,OAA/D;AAAA,0BAA6EA,YAAY,GAAG,MAAH,GAAY,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1B,EAEGA,YAAY,iBAAI,QAAC,IAAD,CAAM,IAAN;AAAA,gBACdF,SAAS,CAACM,GAAV,CAAc,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrC,4BACE,QAAC,SAAD;AAA0B,UAAA,OAAO,EAAC,OAAlC;AAAA,kCACE,QAAC,SAAD,CAAW,IAAX;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,OAA+BD,QAAQ,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,OAAqCF,QAAQ,CAACG,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD,CAAW,IAAX;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,OAAqCH,QAAQ,CAACI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD,CAAW,IAAX;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,OAAsCJ,QAAQ,CAACK,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD,CAAW,IAAX;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,OAA4CL,QAAQ,CAACM,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAAgBL,QAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADc;AAAA;AAAA;AAAA;AAAA,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzBD","sourcesContent":["import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nexport default ({ responses, indexOne }) => {\n  const [showResponse, setShowResponse] = useState(false)\n\n\n  const cardStyle = {\n    marginTop: 10\n  }\n  return (\n    <Card style={cardStyle}>\n      Response {indexOne + 1} <Button onClick={() => setShowResponse(!showResponse)} variant=\"light\">Show {showResponse ? 'less' : 'more'}</Button>\n      {showResponse && <Card.Body>\n        {responses.map((response, indexTwo) => {\n          return (\n            <ListGroup key={indexTwo} variant=\"flush\">\n              <ListGroup.Item><b>Email:</b> {response.qOne}</ListGroup.Item>\n              <ListGroup.Item><b>Description:</b> {response.qTwo}</ListGroup.Item>\n              <ListGroup.Item><b>Price range:</b> {response.qThree}</ListGroup.Item>\n              <ListGroup.Item><b>File uploads:</b> {response.qFour}</ListGroup.Item>\n              <ListGroup.Item><b>Requested services:</b> {response.qFive}</ListGroup.Item>\n            </ListGroup>\n          )\n        })}\n      </Card.Body>}\n    </Card>\n  )\n}"]},"metadata":{},"sourceType":"module"}