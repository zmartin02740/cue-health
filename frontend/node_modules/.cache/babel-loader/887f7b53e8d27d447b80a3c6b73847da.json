{"ast":null,"code":"var _jsxFileName = \"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Question from './question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Questions({\n  questionCount,\n  questions\n}) {\n  _s();\n\n  const value = useSelector(state => state.value);\n  const questionOne = useSelector(state => state.questionOne);\n  const questionTwo = useSelector(state => state.questionTwo);\n  const questionThree = useSelector(state => state.questionThree);\n  const questionFour = useSelector(state => state.questionFour);\n  const questionFive = useSelector(state => state.questionFive);\n  const responses = useSelector(state => state.responses);\n  const dispatch = useDispatch();\n\n  const surveySubmission = () => {\n    const response = {\n      qOne: questionOne,\n      qTwo: questionTwo,\n      qThree: questionThree,\n      qFour: questionFour,\n      qFive: questionFive\n    };\n    dispatch({\n      type: 'UPDATERESPONSES',\n      payload: response\n    });\n    dispatch({\n      type: 'UPDATESQUESTIONONE',\n      payload: response\n    });\n    dispatch({\n      type: 'UPDATESQUESTIONTWO',\n      payload: response\n    });\n    dispatch({\n      type: 'UPDATESQUESTIONTHREE',\n      payload: response\n    });\n    dispatch({\n      type: 'CLEARQUESTIONFOUR'\n    });\n    dispatch({\n      type: 'CLEARQUESTIONFIVE'\n    });\n    dispatch({\n      type: 'ZERO'\n    });\n    console.log(responses);\n  };\n\n  const buttonStyle = {\n    margin: 40\n  };\n  const containerStyle = {\n    paddingTop: 30\n  };\n\n  let chosenQuestion = /*#__PURE__*/_jsxDEV(Question, {\n    question: questions[value]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 24\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: chosenQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [\"(\", value + 1, \" / \", questionCount, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: surveySubmission,\n      style: buttonStyle,\n      variant: \"primary\",\n      children: \"Submit Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questions, \"PKQ/cDENL82SO7AzTvGT81mNmDQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/questions.js"],"names":["React","useState","useDispatch","useSelector","connect","Button","Col","Container","Question","Questions","questionCount","questions","value","state","questionOne","questionTwo","questionThree","questionFour","questionFive","responses","dispatch","surveySubmission","response","qOne","qTwo","qThree","qFour","qFive","type","payload","console","log","buttonStyle","margin","containerStyle","paddingTop","chosenQuestion"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Question from './question'\n\nexport function Questions({\n  questionCount,\n  questions\n }) {\n  const value = useSelector((state) => state.value)\n  const questionOne = useSelector((state) => state.questionOne)\n  const questionTwo = useSelector((state) => state.questionTwo)\n  const questionThree = useSelector((state) => state.questionThree)\n  const questionFour = useSelector((state) => state.questionFour)\n  const questionFive = useSelector((state) => state.questionFive)\n  const responses = useSelector((state) => state.responses)\n  const dispatch = useDispatch()\n\n  const surveySubmission = () => {\n    const response = {\n      qOne: questionOne,\n      qTwo: questionTwo,\n      qThree: questionThree,\n      qFour: questionFour,\n      qFive: questionFive\n    }\n\n    dispatch({ type: 'UPDATERESPONSES', payload: response })\n    dispatch({ type: 'UPDATESQUESTIONONE', payload: response })\n    dispatch({ type: 'UPDATESQUESTIONTWO', payload: response })\n    dispatch({ type: 'UPDATESQUESTIONTHREE', payload: response })\n    dispatch({ type: 'CLEARQUESTIONFOUR' })\n    dispatch({ type: 'CLEARQUESTIONFIVE' })\n    dispatch({ type: 'ZERO' })\n    console.log(responses)\n  }\n\n  const buttonStyle = {\n    margin: 40\n  }\n\n  const containerStyle = {\n    paddingTop: 30\n  }\n\n  let chosenQuestion = <Question question={questions[value]} />\n  return (\n    <Container style={containerStyle}>\n      <Col>{chosenQuestion}</Col>\n      <Col>({value + 1} / {questionCount})</Col>\n      <Button\n        onClick={surveySubmission}\n        style={buttonStyle}\n        variant=\"primary\">\n        Submit Survey\n        </Button>\n    </Container>\n  )\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}