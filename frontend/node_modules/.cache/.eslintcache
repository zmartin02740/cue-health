[{"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/index.js":"1","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/App.js":"2","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/store/reducers.js":"3","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/store/actions.js":"4","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/index.js":"5","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/questions.js":"6","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/responses.js":"7","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/DirectionalButton.js":"8","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/data/questionsObj.js":"9","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/question.js":"10","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/response.js":"11","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/CheckboxInput.js":"12","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/ImageInput.js":"13","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/SelectInput.js":"14","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/TextareaInput.js":"15","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/TextInput.js":"16","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/ValidationHandler.js":"17"},{"size":419,"mtime":1644236721372,"results":"18","hashOfConfig":"19"},{"size":198,"mtime":1644236721369,"results":"20","hashOfConfig":"19"},{"size":2504,"mtime":1644243202315,"results":"21","hashOfConfig":"19"},{"size":593,"mtime":1644241903796,"results":"22","hashOfConfig":"19"},{"size":1065,"mtime":1644241903794,"results":"23","hashOfConfig":"19"},{"size":2951,"mtime":1644244204165,"results":"24","hashOfConfig":"19"},{"size":504,"mtime":1644241903796,"results":"25","hashOfConfig":"19"},{"size":1326,"mtime":1644236721370,"results":"26","hashOfConfig":"19"},{"size":628,"mtime":1644236721371,"results":"27","hashOfConfig":"19"},{"size":920,"mtime":1644236721373,"results":"28","hashOfConfig":"19"},{"size":1148,"mtime":1644245070340,"results":"29","hashOfConfig":"19"},{"size":968,"mtime":1644242901855,"results":"30","hashOfConfig":"19"},{"size":875,"mtime":1644242850752,"results":"31","hashOfConfig":"19"},{"size":700,"mtime":1644242808420,"results":"32","hashOfConfig":"19"},{"size":628,"mtime":1644242800345,"results":"33","hashOfConfig":"19"},{"size":612,"mtime":1644243221027,"results":"34","hashOfConfig":"19"},{"size":763,"mtime":1644244451676,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yfphi3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"38"},"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/index.js",[],["84","85"],"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/App.js",["86"],"import logo from './logo.svg';\nimport './App.css';\nimport Survey from './pages/survey'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Survey />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/store/reducers.js",[],"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/store/actions.js",[],"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/index.js",["87"],"import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Questions from './questions'\nimport Responses from './responses'\nimport DirectionalButton from '../../common/DirectionalButton'\nimport questions from '../../data/questionsObj'\n\nexport default () => {\n  const questionCount = Object.keys(questions).length\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <DirectionalButton\n            direction={'left'}\n            questionCount={questionCount}\n            questions={questions}\n          />\n        </Col>\n        <Col xs={6}>\n          <Questions questions={questions} questionCount={questionCount} />\n        </Col>\n        <Col>\n          <DirectionalButton\n            direction={'right'}\n            questionCount={questionCount}\n            questions={questions}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <Responses />\n        </Col>\n      </Row>\n    </Container>\n\n  )\n}\n","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/questions.js",["88","89"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Question from './question'\nimport ValidationHandler from '../../common/ValidationHandler';\n\nexport function Questions({\n  questionCount,\n  questions\n }) {\n  const [validations, setValidations] = useState([])\n  const value = useSelector((state) => state.value)\n  const questionOne = useSelector((state) => state.questionOne)\n  const questionTwo = useSelector((state) => state.questionTwo)\n  const questionThree = useSelector((state) => state.questionThree)\n  const questionFour = useSelector((state) => state.questionFour)\n  const questionFive = useSelector((state) => state.questionFive)\n  const responses = useSelector((state) => state.responses)\n  const dispatch = useDispatch()\n\n  const surveySubmission = () => {\n    const response = {\n      qOne: questionOne,\n      qTwo: questionTwo,\n      qThree: questionThree,\n      qFour: questionFour,\n      qFive: questionFive\n    }\n\n    let validationErrors = []\n\n    const qOneValidation = ValidationHandler(questionOne)\n    const qTwoValidation = ValidationHandler(questionTwo)\n    const qThreeValidation = ValidationHandler(questionThree)\n    const qFourValidation = ValidationHandler(questionFour)\n    const qFiveValidation = ValidationHandler(questionFive)\n\n    if (qOneValidation.length > 0) validationErrors.push(qOneValidation)\n    if (qTwoValidation.length > 0) validationErrors.push(qTwoValidation)\n    if (qThreeValidation.length > 0) validationErrors.push(qThreeValidation)\n    if (qFourValidation.length > 0) validationErrors.push(qFourValidation)\n    if (qFiveValidation.length > 0) validationErrors.push(qFiveValidation)\n\n    if (validationErrors.length > 0) {\n      setValidations(validationErrors)\n    } else {\n      dispatch({ type: 'UPDATERESPONSES', payload: response })\n      dispatch({ type: 'UPDATESQUESTIONONE', payload: '' })\n      dispatch({ type: 'UPDATESQUESTIONTWO', payload: '' })\n      dispatch({ type: 'UPDATESQUESTIONTHREE', payload: '' })\n      dispatch({ type: 'CLEARQUESTIONFOUR' })\n      dispatch({ type: 'CLEARQUESTIONFIVE' })\n      dispatch({ type: 'ZERO' })\n    }\n  }\n\n  const buttonStyle = {\n    margin: 40\n  }\n\n  const containerStyle = {\n    paddingTop: 30\n  }\n\n  const errorStyle = {\n    color: 'red'\n  }\n\n  let chosenQuestion = <Question question={questions[value]} />\n  return (\n    <Container style={containerStyle}>\n      <Col>{chosenQuestion}</Col>\n      <Col>({value + 1} / {questionCount})</Col>\n      <Col style={errorStyle}>{validations.length > 0 ? validations.join(', ') : null}</Col>\n      <Button\n        onClick={surveySubmission}\n        style={buttonStyle}\n        variant=\"primary\">\n        Submit Survey\n        </Button>\n    </Container>\n  )\n}\n\nexport default Questions;","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/responses.js",["90"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\nimport Response from './response'\n\nexport default () => {\n  const responses = useSelector((state) => state.responses)\n  const responsesComponent = responses.length > 0 ?\n    responses.map((response, index) => {\n      return <Response key={index} indexOne={index} response={response} />\n    }) : null;\n  return (\n    <>\n    <Form.Label>Responses</Form.Label>\n    {responsesComponent}\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/DirectionalButton.js",["91","92"],"import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from 'react-redux';\nimport * as actionType from '../store/actions';\n\nexport function DirectionalButton({ direction, questionCount, questions }) {\n  const value = useSelector((state) => state.value)\n  const dispatch = useDispatch()\n  const isLeft = direction === 'left'\n  const isMax = value >= questionCount - 1\n  const isMin = value <= 0\n\n  const handleValueChange = () => {\n    if (isLeft) {\n      if (value <= 0) {\n        alert('You are at the first question')\n      } else {\n        dispatch({ type: 'DECREASE' })\n      }\n    } else {\n      if (value > questionCount - 2) {\n        dispatch({ type: 'ZERO' })\n      } else {\n        dispatch({ type: 'INCREASE' })\n      }\n    }\n  }\n\n  const buttonStyle = {\n    marginTop: 100\n  };\n\n  let buttonComponent\n\n  if (isLeft && isMin) {\n    buttonComponent = null\n  } else if (!isLeft && isMax) {\n    buttonComponent = null\n  } else {\n    buttonComponent = (\n      <Button\n        variant=\"primary\"\n        size=\"sm\"\n        style={buttonStyle}\n        onClick={handleValueChange}>\n        {isLeft ? 'Previous' : 'Next'} Question\n      </Button>\n    )\n  }\n\n  return (\n    <>{buttonComponent}</>\n  )\n}\n\nexport default DirectionalButton;","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/data/questionsObj.js",["93"],"export default {\n  0: {\n    title: 'Email',\n    type: 4,\n    hint: 'Please use the best email to reach you.'\n  },\n  1: {\n    title: 'Describe your project',\n    type: 3\n  },\n  2: {\n    title: 'Price range',\n    type: 2,\n    options: [\n      '',\n      '$1000 or less',\n      '$1001 to $5000',\n      '$5001 to $10000',\n      '$10001 or more'\n    ]\n  },\n  3: {\n    title: 'Upload any files you would like us to review ahead of time',\n    type: 1\n  },\n  4: {\n    title: 'What services would you like',\n    type: 0,\n    options: [\n      'Design',\n      'Programming',\n      'Consulting',\n      'Management',\n      'Other'\n    ]\n  }\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/question.js",["94","95"],"import React from 'react'\nimport CheckboxInput from '../../common/CheckboxInput'\nimport ImageInput from '../../common/ImageInput'\nimport SelectInput from '../../common/SelectInput'\nimport TextareaInput from '../../common/TextareaInput'\nimport TextInput from '../../common/TextInput'\n\nexport default ({ currentState, question }) => {\n  const questionInputHandler = (questionObj) => {\n    let input\n    switch (questionObj.type) {\n      case 0:\n        input = <CheckboxInput question={questionObj} />\n        break;\n      case 1:\n        input = <ImageInput question={questionObj} />\n        break;\n      case 2:\n        input = <SelectInput question={questionObj} />\n        break;\n      case 3:\n        input = <TextareaInput question={questionObj} />\n        break;\n      case 4:\n        input = <TextInput question={questionObj} />\n        break;\n    }\n    return input\n  }\n\n\n  return questionInputHandler(question)\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/pages/survey/response.js",["96"],"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/CheckboxInput.js",["97"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nexport default ({ question }) => {\n  const values = useSelector((state) => state.questionFive)\n  const dispatch = useDispatch()\n  const handleInputChange = (event) => {\n    const value = event.target.value\n    if (values.response.includes(value)) {\n      let index = question.options.indexOf(value)\n      let updatedSelection = values.response\n      updatedSelection.splice(index, 1)\n\n      dispatch({ type: 'REMOVEFROMQUESTIONFIVE', payload: updatedSelection })\n    } else {\n      dispatch({ type: 'ADDTOQUESTIONFIVE', payload: value })\n    }\n  }\n\n  return (\n    <>\n    <Form.Label>{question.title}</Form.Label>\n    {question.options.map((option, index) => {\n      return (\n        <Form.Check\n          key={index}\n          label={option}\n          onChange={handleInputChange}\n          value={option}\n        />\n      )\n    })}\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/ImageInput.js",["98"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form'\n\nexport default ({ question }) => {\n  const value = useSelector((state) => state.questionFour)\n  const dispatch = useDispatch()\n  const handleInputChange = (event) => {\n    dispatch({ type: 'UPDATESQUESTIONFOUR', payload: event.target.value })\n  }\n\n  return (\n    <>\n    <Form.Label>{question.title}</Form.Label>\n    <Form.Control\n      type=\"file\"\n      onChange={handleInputChange}\n      value={value.response[-1]}\n    />\n    <Form.Text muted>\n      {question.hint}\n    </Form.Text>\n    {value.response.length > 0 ?\n      value.response.map((file, index) => {\n        return (\n          <Card key={index}>\n            <Card.Body>{file}</Card.Body>\n          </Card>\n        )\n      })\n      : null}\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/SelectInput.js",["99"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nexport default ({ question }) => {\n  const value = useSelector((state) => state.questionThree)\n  const dispatch = useDispatch()\n  let optionsComponent = question.options.map((option, index) =>\n    <option key={index} value={option}>{option}</option>)\n\n  const handleSelectInputChange = (event) => {\n    dispatch({ type: 'UPDATESQUESTIONTHREE', payload: event.target.value })\n  }\n\n  return (\n    <>\n    <Form.Label>{question.title}:</Form.Label>\n    <Form.Select onChange={handleSelectInputChange} value={value.response}>\n      {optionsComponent}\n    </Form.Select>\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/TextareaInput.js",["100"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Form from 'react-bootstrap/form'\n\nexport default ({ question }) => {\n  const value = useSelector((state) => state.questionTwo)\n  const dispatch = useDispatch()\n  const handleInputChange = (event) => {\n    dispatch({ type: 'UPDATESQUESTIONTWO', payload: event.target.value })\n  }\n  return (\n    <>\n    <Form.Label>{question.title}</Form.Label>\n    <Form.Control\n      as=\"textarea\"\n      onChange={handleInputChange}\n      placeholder=\"Leave a comment here\"\n      style={{ height: '100px' }}\n      value={value.response}\n    />\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/TextInput.js",["101"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nexport default ({ question }) => {\n  const value = useSelector((state) => state.questionOne)\n  const dispatch = useDispatch()\n  const handleInputChange = (event) => {\n    dispatch({ type: 'UPDATESQUESTIONONE', payload: event.target.value })\n  }\n  return (\n    <>\n    <Form.Label>{question.title}</Form.Label>\n    <Form.Control\n      type=\"text\"\n      onChange={handleInputChange}\n      value={value.response}\n    />\n    <Form.Text muted>\n      {question.hint}\n    </Form.Text>\n    </>\n  )\n}","/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/ValidationHandler.js",["102","103"],"import React from 'react'\n\nexport default (response) => {\n  let validationError = ''\n  if (typeof response.response === 'string') {\n    if (response.response.length < 5) {\n      if (response.title.includes('Price')) {\n        validationError = `${response.title}: Please choose one of the dropdown options`\n      } else {\n        validationError = `${response.title}: Needs to be more than 5 characters`\n      }\n    }\n    if (response.title.includes('Email')) {\n      if (!response.response.includes('@')) {\n        validationError = `${response.title}: Needs to have an @ symbol`\n      }\n    }\n  } else {\n    if (response.response.length < 1) {\n      validationError = `${response.title}: Need to select at least one option`\n    }\n  }\n\n  return validationError\n}",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":10,"column":1,"nodeType":"114","endLine":42,"endColumn":2},{"ruleId":"108","severity":1,"message":"115","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"116","line":21,"column":9,"nodeType":"110","messageId":"111","endLine":21,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":6,"column":1,"nodeType":"114","endLine":18,"endColumn":2},{"ruleId":"108","severity":1,"message":"115","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":17},{"ruleId":"108","severity":1,"message":"117","line":5,"column":13,"nodeType":"110","messageId":"111","endLine":5,"endColumn":23},{"ruleId":"112","severity":1,"message":"118","line":1,"column":1,"nodeType":"114","endLine":37,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":8,"column":1,"nodeType":"114","endLine":33,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":11,"column":5,"nodeType":"121","messageId":"122","endLine":27,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":6,"column":1,"nodeType":"114","endLine":33,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":5,"column":1,"nodeType":"114","endLine":36,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":6,"column":1,"nodeType":"114","endLine":35,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":5,"column":1,"nodeType":"114","endLine":23,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":5,"column":1,"nodeType":"114","endLine":23,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":5,"column":1,"nodeType":"114","endLine":24,"endColumn":2},{"ruleId":"108","severity":1,"message":"123","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":25,"endColumn":2},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'connect' is defined but never used.","'responses' is assigned a value but never used.","'actionType' is defined but never used.","Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]