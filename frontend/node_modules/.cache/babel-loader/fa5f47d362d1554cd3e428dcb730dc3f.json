{"ast":null,"code":"var _jsxFileName = \"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/CheckboxInput.js\";\nimport React, { useState, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default (({\n  question\n}) => {\n  const handleInputChange = event => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), question.options.map((option, index) => {\n      return /*#__PURE__*/_jsxDEV(Form.Check, {\n        label: option,\n        onChange: handleInputChange,\n        value: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n});","map":{"version":3,"sources":["/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/CheckboxInput.js"],"names":["React","useState","useContext","Form","question","handleInputChange","event","title","options","map","option","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAMC,iBAAiB,GAAIC,KAAD,IAAW,CACpC,CADD;;AAGA,sBACE;AAAA,4BACA,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaF,QAAQ,CAACG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADA,EAECH,QAAQ,CAACI,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACvC,0BACE,QAAC,IAAD,CAAM,KAAN;AAEE,QAAA,KAAK,EAAED,MAFT;AAGE,QAAA,QAAQ,EAAEL,iBAHZ;AAIE,QAAA,KAAK,EAAEK;AAJT,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAFD;AAAA,kBADF;AAeD,CAnBD","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Form from 'react-bootstrap/Form'\n\nexport default ({ question }) => {\n  const handleInputChange = (event) => {\n  }\n\n  return (\n    <>\n    <Form.Label>{question.title}</Form.Label>\n    {question.options.map((option, index) => {\n      return (\n        <Form.Check\n          key={index}\n          label={option}\n          onChange={handleInputChange}\n          value={option}\n        />\n      )\n    })}\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}