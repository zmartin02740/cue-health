{"ast":null,"code":"var _jsxFileName = \"/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/DirectionalButton.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport * as actionType from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  direction,\n  questionCount,\n  questions\n}) => {\n  _s();\n\n  const value = useSelector(state => state.value);\n  const dispatch = useDispatch();\n  let isLeft = direction === 'left';\n\n  const handleValueChange = () => {\n    if (isLeft) {\n      if (value <= 0) {\n        alert('You are at the first question');\n      } else {\n        dispatch({\n          type: 'DECREASE'\n        });\n      }\n    } else {\n      if (value > questionCount - 2) {\n        dispatch({\n          type: 'INCREASE'\n        });\n      } else {\n        dispatch({\n          type: 'INCREASE'\n        });\n      }\n    }\n  };\n\n  const buttonStyle = {\n    marginTop: 100\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"primary\",\n    size: \"sm\",\n    style: buttonStyle,\n    onClick: handleValueChange,\n    children: [isLeft ? 'Previous' : 'Next', \" Question\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}, \"Nsft19KCGn8HEUpoe9GMalF4FFI=\", false, function () {\n  return [useSelector, useDispatch];\n}); // const mapStateToProps = state => {\n//   return {\n//     value: state.value\n//   }\n// }\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onAdd: () => dispatch({ type: actionType.INCREASE }),\n//     onSubtract: () => dispatch({ type: actionType.DECREASE })\n//   }\n// }\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(DirectionalButton);","map":{"version":3,"sources":["/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/common/DirectionalButton.js"],"names":["React","Button","useDispatch","useSelector","connect","actionType","direction","questionCount","questions","value","state","dispatch","isLeft","handleValueChange","alert","type","buttonStyle","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;;AAEA,kBAAe,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AAAA;;AAC1D,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAIU,MAAM,GAAGN,SAAS,KAAK,MAA3B;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC9B,QAAID,MAAJ,EAAY;AACV,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACdK,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD;AACF,KAND,MAMO;AACL,UAAIN,KAAK,GAAGF,aAAa,GAAG,CAA5B,EAA+B;AAC7BI,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD;AACF;AACF,GAdD;;AAgBA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,SAAS,EAAE;AADO,GAApB;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,KAAK,EAAED,WAHT;AAIE,IAAA,OAAO,EAAEH,iBAJX;AAAA,eAKGD,MAAM,GAAG,UAAH,GAAgB,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlCD;AAAA,UACgBT,WADhB,EAEmBD,WAFnB;AAAA,G,CAoCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from 'react-redux';\nimport * as actionType from '../store/actions';\n\nexport default ({ direction, questionCount, questions }) => {\n  const value = useSelector((state) => state.value)\n  const dispatch = useDispatch()\n\n  let isLeft = direction === 'left'\n  const handleValueChange = () => {\n    if (isLeft) {\n      if (value <= 0) {\n        alert('You are at the first question')\n      } else {\n        dispatch({ type: 'DECREASE' })\n      }\n    } else {\n      if (value > questionCount - 2) {\n        dispatch({ type: 'INCREASE' })\n      } else {\n        dispatch({ type: 'INCREASE' })\n      }\n    }\n  }\n\n  const buttonStyle = {\n    marginTop: 100\n  };\n\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"sm\"\n      style={buttonStyle}\n      onClick={handleValueChange}>\n      {isLeft ? 'Previous' : 'Next'} Question\n    </Button>\n  )\n}\n\n// const mapStateToProps = state => {\n//   return {\n//     value: state.value\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onAdd: () => dispatch({ type: actionType.INCREASE }),\n//     onSubtract: () => dispatch({ type: actionType.DECREASE })\n//   }\n// }\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(DirectionalButton);"]},"metadata":{},"sourceType":"module"}