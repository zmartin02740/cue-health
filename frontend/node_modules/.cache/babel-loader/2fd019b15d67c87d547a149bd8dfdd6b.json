{"ast":null,"code":"import * as actionType from './actions';\nconst initialState = {\n  value: 0,\n  questionOne: '',\n  questionTwo: '',\n  questionThree: '',\n  questionFour: [],\n  questionFive: [],\n  responses: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.INCREASE:\n      return { ...state,\n        value: state.value + 1\n      };\n\n    case actionType.DECREASE:\n      return { ...state,\n        value: state.value - 1\n      };\n\n    case actionType.ZERO:\n      return { ...state,\n        value: 0\n      };\n\n    case actionType.UPDATESQUESTIONONE:\n      return { ...state,\n        questionOne: action.payload\n      };\n\n    case actionType.UPDATESQUESTIONTWO:\n      return { ...state,\n        questionTwo: action.payload\n      };\n\n    case actionType.UPDATESQUESTIONTHREE:\n      return { ...state,\n        questionThree: action.payload\n      };\n\n    case actionType.UPDATESQUESTIONFOUR:\n      return { ...state,\n        questionFour: [...questionFour, action.payload]\n      };\n\n    case actionType.UPDATESQUESTIONFIVE:\n      return { ...state,\n        questionFive: [...questionFive, action.payload]\n      };\n\n    case actionType.RESPONSES:\n      return { ...state,\n        responses: [...responses, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/zack/Desktop/code/fullstack-engineer-exercise-1/frontend/src/store/reducers.js"],"names":["actionType","initialState","value","questionOne","questionTwo","questionThree","questionFour","questionFive","responses","reducer","state","action","type","INCREASE","DECREASE","ZERO","UPDATESQUESTIONONE","payload","UPDATESQUESTIONTWO","UPDATESQUESTIONTHREE","UPDATESQUESTIONFOUR","UPDATESQUESTIONFIVE","RESPONSES"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,WAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,aAAa,EAAE,EAJI;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,YAAY,EAAE,EANK;AAOnBC,EAAAA,SAAS,EAAE;AAPQ,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,UAAU,CAACa,QAAhB;AACE,aAAO,EACL,GAAGH,KADE;AAELR,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAKF,UAAU,CAACc,QAAhB;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAKF,UAAU,CAACe,IAAhB;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAKF,UAAU,CAACgB,kBAAhB;AACE,aAAO,EACL,GAAGN,KADE;AAELP,QAAAA,WAAW,EAAEQ,MAAM,CAACM;AAFf,OAAP;;AAIF,SAAKjB,UAAU,CAACkB,kBAAhB;AACE,aAAO,EACL,GAAGR,KADE;AAELN,QAAAA,WAAW,EAAEO,MAAM,CAACM;AAFf,OAAP;;AAIF,SAAKjB,UAAU,CAACmB,oBAAhB;AACE,aAAO,EACL,GAAGT,KADE;AAELL,QAAAA,aAAa,EAAEM,MAAM,CAACM;AAFjB,OAAP;;AAIF,SAAKjB,UAAU,CAACoB,mBAAhB;AACE,aAAO,EACL,GAAGV,KADE;AAELJ,QAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,EAAkBK,MAAM,CAACM,OAAzB;AAFT,OAAP;;AAIF,SAAKjB,UAAU,CAACqB,mBAAhB;AACE,aAAO,EACL,GAAGX,KADE;AAELH,QAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,EAAkBI,MAAM,CAACM,OAAzB;AAFT,OAAP;;AAIF,SAAKjB,UAAU,CAACsB,SAAhB;AACE,aAAO,EACL,GAAGZ,KADE;AAELF,QAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ,EAAeG,MAAM,CAACM,OAAtB;AAFN,OAAP;;AAIF;AACE,aAAOP,KAAP;AA/CJ;AAiDD,CAlDD;;AAmDA,eAAeD,OAAf","sourcesContent":["import * as actionType from './actions';\nconst initialState = {\n  value: 0,\n  questionOne: '',\n  questionTwo: '',\n  questionThree: '',\n  questionFour: [],\n  questionFive: [],\n  responses: []\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.INCREASE:\n      return {\n        ...state,\n        value: state.value + 1\n      }\n    case actionType.DECREASE:\n      return {\n        ...state,\n        value: state.value - 1\n      }\n    case actionType.ZERO:\n      return {\n        ...state,\n        value: 0\n      }\n    case actionType.UPDATESQUESTIONONE:\n      return {\n        ...state,\n        questionOne: action.payload\n      }\n    case actionType.UPDATESQUESTIONTWO:\n      return {\n        ...state,\n        questionTwo: action.payload\n      }\n    case actionType.UPDATESQUESTIONTHREE:\n      return {\n        ...state,\n        questionThree: action.payload\n      }\n    case actionType.UPDATESQUESTIONFOUR:\n      return {\n        ...state,\n        questionFour: [...questionFour, action.payload]\n      }\n    case actionType.UPDATESQUESTIONFIVE:\n      return {\n        ...state,\n        questionFive: [...questionFive, action.payload]\n      }\n    case actionType.RESPONSES:\n      return {\n        ...state,\n        responses: [...responses, action.payload]\n      }\n    default:\n      return state\n  }\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}